{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-length":"9822","content-type":"application/json","date":"Wed, 08 Jan 2025 09:45:43 GMT","server":"istio-envoy","strict-transport-security":"max-age=63072000; include-subdomains","x-envoy-upstream-service-time":"9485"},"body":"","status":200,"url":"https://api.langflow.astra.datastax.com/lf/81585ed6-5563-4a29-a944-2376648984ce/api/v1/run/f44d53ab-bdeb-4291-ad81-259bc36fe2db?stream=false"},"revalidate":31536000,"tags":[]}